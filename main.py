#!/usr/bin/env python3# -*- coding: utf-8 -*-"""The Witcher TRPG - Aplicaci√≥n para Windows 11Versi√≥n 1.0.0"""import customtkinter as ctk# Configuraci√≥nctk.set_appearance_mode("dark")ctk.set_default_color_theme("blue")class TheWitcherTRPGApp(ctk.CTk):    """Aplicaci√≥n principal"""        def __init__(self):        super().__init__()                # Configurar ventana        self.title("The Witcher TRPG - Compa√±ero Digital")        self.geometry("1400x900")        self.minsize(1280, 720)                # Centrar ventana        self.center_window()                # Configurar grid        self.grid_rowconfigure(0, weight=1)        self.grid_columnconfigure(1, weight=1)                # Variables        self.current_section = "inicio"                # Crear interfaz        self.create_navigation_sidebar()        self.create_main_content_frame()        self.create_top_bar()                # Mostrar inicio        self.show_inicio()        def center_window(self):        """Centrar ventana en pantalla"""        self.update_idletasks()        width = self.winfo_width()        height = self.winfo_height()        x = (self.winfo_screenwidth() // 2) - (width // 2)        y = (self.winfo_screenheight() // 2) - (height // 2)        self.geometry(f'{width}x{height}+{x}+{y}')        def create_navigation_sidebar(self):        """Crear men√∫ lateral"""        self.sidebar = ctk.CTkFrame(self, width=250, corner_radius=0)        self.sidebar.grid(row=0, column=0, rowspan=2, sticky="nsew")        self.sidebar.grid_rowconfigure(10, weight=1)                # Logo        self.logo_label = ctk.CTkLabel(            self.sidebar,            text="‚öîÔ∏è The Witcher TRPG",            font=ctk.CTkFont(size=20, weight="bold")        )        self.logo_label.grid(row=0, column=0, padx=20, pady=(20, 10))                # Versi√≥n        self.version_label = ctk.CTkLabel(            self.sidebar,            text="v1.0.0",            font=ctk.CTkFont(size=10)        )        self.version_label.grid(row=1, column=0, padx=20, pady=(0, 30))                # Botones de navegaci√≥n        self.nav_buttons = {}        nav_items = [            ("üè† Inicio", "inicio"),            ("üë§ Personajes", "personajes"),            ("üé≠ Razas & Profesiones", "razas"),            ("üê∫ Bestiario", "bestiario"),            ("‚öîÔ∏è Equipo & Armas", "equipo"),            ("‚ú® Magia & Hechizos", "magia"),            ("üìñ Campa√±a", "campana"),            ("üé≤ Calculadoras", "calculadoras"),            ("üìö Manuales", "manuales"),        ]                for idx, (text, section) in enumerate(nav_items, start=2):            btn = ctk.CTkButton(                self.sidebar,                text=text,                command=lambda s=section: self.change_section(s),                width=220,                height=40,                font=ctk.CTkFont(size=14),                anchor="w"            )            btn.grid(row=idx, column=0, padx=20, pady=5)            self.nav_buttons[section] = btn                # Bot√≥n configuraci√≥n        self.settings_button = ctk.CTkButton(            self.sidebar,            text="‚öôÔ∏è Configuraci√≥n",            command=self.show_configuracion,            width=220,            height=40,            font=ctk.CTkFont(size=14),            anchor="w"        )        self.settings_button.grid(row=20, column=0, padx=20, pady=(10, 20))        def create_top_bar(self):        """Crear barra superior"""        self.top_bar = ctk.CTkFrame(self, height=60, corner_radius=0)        self.top_bar.grid(row=0, column=1, sticky="ew", padx=0, pady=0)                # B√∫squeda        self.search_entry = ctk.CTkEntry(            self.top_bar,            placeholder_text="üîç Buscar...",            width=400,            height=40        )        self.search_entry.pack(side="left", padx=20, pady=10)                # Modo oscuro/claro        self.theme_switch = ctk.CTkSwitch(            self.top_bar,            text="üåô Modo Oscuro",            command=self.toggle_theme,            onvalue="dark",            offvalue="light"        )        self.theme_switch.pack(side="right", padx=20, pady=10)        self.theme_switch.select()        def create_main_content_frame(self):        """Crear √°rea principal"""        self.main_frame = ctk.CTkFrame(self, corner_radius=0)        self.main_frame.grid(row=1, column=1, sticky="nsew", padx=0, pady=0)        self.main_frame.grid_rowconfigure(0, weight=1)        self.main_frame.grid_columnconfigure(0, weight=1)        def clear_main_frame(self):        """Limpiar contenido"""        for widget in self.main_frame.winfo_children():            widget.destroy()        def change_section(self, section):        """Cambiar de secci√≥n"""        self.current_section = section                # Actualizar botones        for sect, btn in self.nav_buttons.items():            if sect == section:                btn.configure(fg_color=("gray75", "gray25"))            else:                btn.configure(fg_color=("gray85", "gray20"))                # Mostrar secci√≥n        section_methods = {            "inicio": self.show_inicio,            "personajes": self.show_personajes,            "razas": self.show_razas,            "bestiario": self.show_bestiario,            "equipo": self.show_equipo,            "magia": self.show_magia,            "campana": self.show_campana,            "calculadoras": self.show_calculadoras,            "manuales": self.show_manuales,        }                if section in section_methods:            section_methods[section]()        def show_inicio(self):        """Pantalla de inicio"""        self.clear_main_frame()                scroll_frame = ctk.CTkScrollableFrame(self.main_frame)        scroll_frame.pack(fill="both", expand=True, padx=20, pady=20)                # Bienvenida        welcome = ctk.CTkLabel(            scroll_frame,            text="Bienvenido a The Witcher TRPG",            font=ctk.CTkFont(size=32, weight="bold")        )        welcome.pack(pady=(20, 10))                subtitle = ctk.CTkLabel(            scroll_frame,            text="Tu compa√±ero digital para aventuras en el Continente",            font=ctk.CTkFont(size=16)        )        subtitle.pack(pady=(0, 30))                # Informaci√≥n        info_text = """üìå Caracter√≠sticas:‚úì Gesti√≥n completa de personajes‚úì Bestiario con criaturas del Continente‚úì Base de datos de equipo y armas‚úì Sistema completo de magia y hechizos‚úì Calculadoras para combate‚úì Gesti√≥n de campa√±as‚úì Interfaz moderna para Windows 11        """                info_label = ctk.CTkLabel(            scroll_frame,            text=info_text,            font=ctk.CTkFont(size=14),            justify="left"        )        info_label.pack(pady=20)        def show_personajes(self):        """Secci√≥n personajes"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="üë§ Gesti√≥n de Personajes",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_razas(self):        """Secci√≥n razas"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="üé≠ Razas y Profesiones",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_bestiario(self):        """Secci√≥n bestiario"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="üê∫ Bestiario del Continente",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_equipo(self):        """Secci√≥n equipo"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="‚öîÔ∏è Equipo y Armamento",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_magia(self):        """Secci√≥n magia"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="‚ú® Magia y Hechizos",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_campana(self):        """Secci√≥n campa√±a"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="üìñ Gesti√≥n de Campa√±a",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_calculadoras(self):        """Secci√≥n calculadoras"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="üé≤ Calculadoras de Juego",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_manuales(self):        """Secci√≥n manuales"""        self.clear_main_frame()        label = ctk.CTkLabel(            self.main_frame,            text="üìö Manuales y Referencias",            font=ctk.CTkFont(size=28, weight="bold")        )        label.pack(pady=20)        def show_configuracion(self):        """Ventana de configuraci√≥n"""        config_window = ctk.CTkToplevel(self)        config_window.title("Configuraci√≥n")        config_window.geometry("500x400")                label = ctk.CTkLabel(            config_window,            text="‚öôÔ∏è Configuraci√≥n",            font=ctk.CTkFont(size=24, weight="bold")        )        label.pack(pady=20)        def toggle_theme(self):        """Cambiar tema"""        current = ctk.get_appearance_mode()        new_mode = "light" if current == "Dark" else "dark"        ctk.set_appearance_mode(new_mode)def main():    """Funci√≥n principal"""    app = TheWitcherTRPGApp()    app.mainloop()if __name__ == "__main__":    main()